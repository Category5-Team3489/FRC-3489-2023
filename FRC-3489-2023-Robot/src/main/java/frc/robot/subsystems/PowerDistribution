package frc.robot.subsystems;

import java.util.Map;
import java.util.function.DoubleSupplier;

import com.revrobotics.CANSparkMax;
import com.revrobotics.RelativeEncoder;
import com.revrobotics.SparkMaxPIDController;
import com.revrobotics.CANSparkMaxLowLevel.MotorType;

import edu.wpi.first.networktables.BooleanEntry;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.shuffleboard.BuiltInLayouts;
import edu.wpi.first.wpilibj.shuffleboard.BuiltInWidgets;
import edu.wpi.first.wpilibj.shuffleboard.Shuffleboard;
import edu.wpi.first.wpilibj.shuffleboard.ShuffleboardLayout;
import edu.wpi.first.wpilibj2.command.FunctionalCommand;
import edu.wpi.first.wpilibj2.command.InstantCommand;
import edu.wpi.first.wpilibj2.command.RepeatCommand;
import edu.wpi.first.wpilibj2.command.RunCommand;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import frc.robot.Cat5Shuffleboard;
import frc.robot.Constants;
import frc.robot.Constants.PowerDistributionConstants;
import edu.wpi.first.wpilibj.PowerDistribution;

public class PowerDistribution extends SubsystemBase {
    // Devices
    PowerDistribution PDH = new PowerDistribution(Constants.PowerDistributionConstants.PDHCanID,kRev);

    //Get Data
    public double getPDHTemperature(){
        return PDH.getTemperature();
    }

    public double getInputVoltage(){
        return PDH.getVoltage();
    }

    public double[] getChannelVoltageOutputs(){
       int numChannels = PDH.getNumChannels();
        double[] voltages = new double[numChannels];
        for (int i, i< numChannels, i++){
            voltages[i] = PDH.getCurrent(i);
        }
        return voltages;
    }

    public double getChannelVoltageOutputs(int channel){
        return PDH.getCurrent(channel);
    }

    public PowerDistributionFaults getFaults(){
        return PDH.getFaults();
    }

    public PowerDistributionStickyFaults(){
        return PDH.getStickyFaults();
    }


}